{% render 'section-spacing-collapsing' %}

<style>
  {%- assign section_background = section.settings.background | default: settings.background -%}
  {%- assign card_background = section.settings.product_card_background | default: settings.product_card_background -%}
  {%- assign card_blends = false -%}

  {%- unless section_background != 'rgba(0,0,0,0)' and card_background != 'rgba(0,0,0,0)' and section_background != card_background -%}
    {%- assign card_blends = true -%}
  {%- endunless -%}

  #shopify-section-{{ section.id }} .product-list {
    --product-list-gap: {% if section.settings.stack_products and section.settings.products_per_row_mobile == '2' %}{% if card_blends %}var(--product-list-row-gap){% endif %} var(--spacing-2){% else %}var(--product-list-row-gap) var(--product-list-column-gap){% endif %};
    --product-list-items-per-row: {{ section.settings.products_per_row_mobile | times: 1 }};
    --product-list-carousel-item-width: 74vw;
    --product-list-grid: {% if section.settings.stack_products %}auto / repeat(var(--product-list-items-per-row), minmax(0, 1fr)){% else %}auto / auto-flow var(--product-list-carousel-item-width){% endif %};
  }

  @media screen and (min-width: 700px) {
    #shopify-section-{{ section.id }} .product-list {
      --product-list-gap: var(--product-list-row-gap) var(--product-list-column-gap);
      --product-list-items-per-row: 2;
      --product-list-carousel-item-width: 36vw;
    }
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} .product-list {
      --product-list-items-per-row: {{ section.settings.products_per_row_desktop }};
      --product-list-carousel-item-width: calc(var(--container-inner-width) / {{ section.settings.products_per_row_desktop }} - (var(--product-list-column-gap) / {{ section.settings.products_per_row_desktop }} * {{ section.settings.products_per_row_desktop | minus: 1 }}));
    }
  }
</style>

{%- capture class -%}content-over-media {% if section.settings.video_size == 'auto' %}aspect-video{% else %}content-over-media--{{ section.settings.video_size }}{% endif %} {% if section.settings.full_width %}full-bleed{% else %}shadow-block rounded-lg{% endif %}{%- endcapture -%}

<div {% render 'surface', class: class, text_color: section.settings.text_color %}>
  {%- capture poster -%}
    {%- assign poster_image = section.settings.poster | default: section.settings.video.preview_image -%}

    {%- if section.settings.autoplay == false and poster_image != blank -%}
      {%- capture sizes -%}{% if section.settings.full_width %}100vw{% else %}(max-width: 740px) calc(100vw - 40px), (max-width: 999px) calc(100vw - 64px), min({{ settings.page_width }}px, 100vw - 96px){% endif %}{%- endcapture -%}
      {{- poster_image | image_url: width: poster_image.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200' -}}
    {%- endif -%}
  {%- endcapture -%}

  {%- if section.settings.video -%}
    <video-media {% if section.settings.autoplay %}autoplay{% endif %}>
      {%- if section.settings.autoplay -%}
        {%- assign show_controls = false -%}
      {%- else -%}
        {%- assign show_controls = true -%}
      {%- endif -%}

      {{- section.settings.video | video_tag: playsinline: true, preload: 'metadata', muted: section.settings.autoplay, loop: section.settings.autoplay, controls: show_controls, image_size: '800x' -}}
      {{- poster -}}
    </video-media>
  {%- else -%}
    <video-media host="{{ section.settings.external_video_url.type }}" {% if section.settings.autoplay %}autoplay class="pointer-events-none"{% endif %}>
      {{- poster -}}

      <template>
        {%- if section.settings.external_video_url.type == 'youtube' -%}
          <iframe src="https://www.youtube.com/embed/{{ section.settings.external_video_url.id }}?playsinline=1&{% if section.settings.autoplay %}autoplay=1&controls=0&mute=1&loop=1&{% endif %}playlist={{ section.settings.external_video_url.id }}&enablejsapi=1&rel=0&modestbranding=1&origin={{ 'https://' | append: request.host | url_encode }}" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe>
        {%- elsif section.settings.external_video_url.type == 'vimeo' -%}
          <iframe src="https://player.vimeo.com/video/{{ section.settings.external_video_url.id }}?autopause=1&{% if section.settings.autoplay %}background=1&autoplay=1&loop=1&muted=1&{% endif %}transparent=0&responsive=1&portrait=0&title=0&byline=0&color={{ settings.text_color | remove_first: '#' }}" allow="autoplay; encrypted-media;" allowfullscreen="allowfullscreen"></iframe>
        {%- endif -%}
      </template>
    </video-media>
  {%- endif -%}

  <div class="wrapper">
  {%- if section.blocks.size > 0 -%}
    <div class="place-self-center text-center">
      <div class="prose">
        {%- for block in section.blocks -%}
         {%- case block.type -%}
          {%- when 'play' -%}
            {%- unless section.settings.autoplay -%}
              <button class="video-play-button" type="button" {{ block.shopify_attributes }}>
                <span class="sr-only">{{ 'general.accessibility.play_video' | t }}</span>
                {%- render 'icon' with 'play-button', width: 48, height: 48 -%}
              </button>
            {%- endunless -%}
          {%- when 'image' -%}
            {%- if block.settings.image != blank -%}
              {%- assign width_ratio = 100.0 | divided_by: block.settings.media_width -%}
              {%- assign maximum_image_width = settings.page_width | divided_by: width_ratio -%}
      
              {%- capture sizes -%}(max-width: 999px) 100vw, min({{ maximum_image_width | ceil }}px, {{ block.settings.media_width }}vw){% endcapture %}
      
              {%- capture image_url -%}
                {{- block.settings.image | image_url: width: maximum_image_width -}}
              {%- endcapture -%}
              
              <img src="{{ image_url }}" alt="{{ block.settings.image.alt }}" width="{{ maximum_image_width }}" height="{{ block.settings.media_width }}" sizes="(max-width: 999px) 100vw, min({{ maximum_image_width | ceil }}px, {{ block.settings.media_width }}vw)">

            {%- else -%}
              {{- 'image' | placeholder_svg_tag: 'aspect-short placeholder' -}}
            {%- endif -%}
          {%- else -%}
            {%- capture poster -%}
              {%- assign poster_image = block.settings.poster_image | default: block.settings.video.preview_image -%}
      
              {%- if poster_image -%}
                {{- poster_image | image_url: width: poster_image.width -}}
              {%- else -%}
                {{ 'image' | placeholder_svg_tag: 'rounded' }}
              {%- endif -%}
            {%- endcapture -%}

            {%- when 'subheading' -%}
              {%- if block.settings.text != blank -%}
                <p class="bold" {{ block.shopify_attributes }}>{{ block.settings.text | escape }}</p>
              {%- endif -%}

            {%- when 'heading' -%}
              {%- if block.settings.text != blank -%}
                <p class="{{ block.settings.heading_tag }}" {{ block.shopify_attributes }}>{{ block.settings.text | escape }}</p>
              {%- endif -%}

            {%- when 'richtext' -%}
              {%- if block.settings.content != blank -%}
                <div {{ block.shopify_attributes }}>
                  {{- block.settings.content -}}
                </div>
              {%- endif -%}
        
            {%- when 'button' -%}
              {%- if block.settings.text != blank -%}
                {% render 'button', content: block.settings.text, href: block.settings.url, size: block.settings.size, style: block.settings.style, background: block.settings.background, text_color: block.settings.text_color, block: block %}
              {%- endif -%}
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>

<div {% render 'section-properties' %}>
  <div class="section-stack">
    {%- assign link_url = section.settings.link_url | default: section.settings.collection.url -%}
    {%- render 'section-header', subheading: section.settings.subheading, heading: section.settings.title, heading_color: section.settings.heading_color, heading_gradient: section.settings.heading_gradient, content: section.settings.content, link_text: section.settings.link_text, link_url: link_url -%}

    <div class="{% if section.settings.show_progress_bar %}scrollable-with-controls{% else %}floating-controls-container{% endif %}">
      {%- assign scroll_area_id = 'scroll-area-' | append: section.id -%}

      <scroll-carousel selector="product-card" id="{{ scroll_area_id }}" class="scroll-area bleed {% if section.settings.products_count > section.settings.products_per_row_desktop %}is-scrollable{% endif %}">
        <reveal-items selector=".product-list > *">
          <product-list class="product-list">
            {%- assign products = section.settings.products | default: section.settings.collection.products -%}

            {%- for product in products limit: section.settings.products_count -%}
              {%- render 'product-card', product: product, stacked: section.settings.stack_products, background: section.settings.product_card_background, text_color: section.settings.product_card_text_color, show_badges: true -%}
            {%- else -%}
              {%- for i in (1..section.settings.products_count) -%}
                {%- capture placeholder_image -%}product-{% cycle '1', '2', '3', '4', '5', '6' %}{%- endcapture -%}
                {%- render 'product-card-placeholder', stacked: section.settings.stack_products, placeholder_image: placeholder_image, background: section.settings.product_card_background, text_color: section.settings.product_card_text_color, text_alignment: settings.product_info_alignment -%}
              {%- endfor -%}
            {%- endfor -%}
          </product-list>
        </reveal-items>
      </scroll-carousel>

      {%- if section.settings.stack_products == false -%}
        {%- if section.settings.show_progress_bar -%}
          {%- assign default_progress = section.settings.products_per_row_desktop | times: 1.0 | divided_by: section.settings.products_count -%}
          {%- render 'scrollbar', observes: scroll_area_id, default_progress: default_progress, show_buttons: true -%}
        {%- else -%}
          <button is="prev-button" class="circle-button circle-button--lg circle-button--fill border group" aria-controls="{{ scroll_area_id }}" disabled>
            <span class="sr-only">{{ 'general.accessibility.previous' | t }}</span>
            <span class="animated-arrow animated-arrow--reverse"></span>
          </button>

          <button is="next-button" class="circle-button circle-button--lg circle-button--fill border group" aria-controls="{{ scroll_area_id }}">
            <span class="sr-only">{{ 'general.accessibility.next' | t }}</span>
            <span class="animated-arrow"></span>
          </button>
        {%- endif -%}
      {%- endif -%}
    
    </div>
    
  </div>
  
</div>

  
  {%- endif -%}
</div>
</div>
{% schema %}
{
  "name": "Combined Section",
  "class": "shopify-section--combined-section",
  "tag": "section",
  "disabled_on": {
    "templates": ["password"],
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products",
      "info": "Replaces collection when selected."
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "stack_products",
      "label": "Stack products",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_progress_bar",
      "label": "Show carousel progress bar",
      "default": false
    },
    {
      "type": "range",
      "id": "products_count",
      "min": 2,
      "max": 50,
      "label": "Products to show",
      "default": 6
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "Products per row (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "products_per_row_desktop",
      "min": 2,
      "max": 5,
      "label": "Products per row (desktop)",
      "default": 3
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading"
    },
    {
      "type": "text",
      "id": "featured_collection_title",
      "label": "Featured Collection Heading",
      "default": "Featured collection"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "url",
      "id": "link_url",
      "label": "Link URL",
      "info": "Default to collection URL."
    },
    {
      "type": "text",
      "id": "link_text",
      "label": "Link text",
      "default": "View all"
    },
    {
      "type": "header",
      "content": "Featured Collection Colors",
      "info": "Gradient replaces solid colors when set."
    },
    {
      "type": "color",
      "id": "featured_collection_background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "featured_collection_background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "featured_collection_text_color",
      "label": "Text"
    },
    {
      "type": "color",
      "id": "featured_collection_heading_color",
      "label": "Heading color"
    },
    {
      "type": "color_background",
      "id": "featured_collection_heading_gradient",
      "label": "Heading gradient"
    },
    {
      "type": "color",
      "id": "featured_collection_product_card_background",
      "label": "Product card background"
    },
    {
      "type": "color",
      "id": "featured_collection_product_card_text_color",
      "label": "Product card text"
    },
    {
      "type": "paragraph",
      "content": "For best visual results and to avoid platform branding, use an MP4 file."
    },
    {
      "type": "checkbox",
      "id": "allow_transparent_header",
      "label": "Allow transparent header",
      "info": "This setting only applies when this section is the first one.",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Autoplay",
      "info": "Video is muted to allow autoplay. For best results, do not add any content on top of the video when autoplay is enabled.",
      "default": false
    },
    {
      "type": "select",
      "id": "video_size",
      "label": "Video size",
      "options": [
        {
          "value": "auto",
          "label": "16/9 (recommended)"
        },
        {
          "value": "sm",
          "label": "Small"
        },
        {
          "value": "md",
          "label": "Medium"
        },
        {
          "value": "lg",
          "label": "Large"
        },
        {
          "value": "fill",
          "label": "Fill screen"
        }
      ],
      "default": "auto"
    },
    {
      "type": "video",
      "id": "video",
      "label": "Video",
      "info": "Replaces external video if both are set."
    },
    {
      "type": "video_url",
      "id": "external_video_url",
      "accept": ["vimeo", "youtube"],
      "label": "Video URL",
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
    },
    {
      "type": "image_picker",
      "id": "poster",
      "label": "Poster image",
      "info": "3200 x 1600px .jpg recommended. Poster is not visible when autoplay is enabled."
    },
    {
      "type": "header",
      "content": "Video Colors"
    },
    {
      "type": "color",
      "id": "video_text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "video_overlay_color",
      "label": "Overlay",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "video_overlay_opacity",
      "label": "Overlay opacity",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "default": 30
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "1500 x 1500px .jpg recommended"
        },
        {
          "type": "range",
          "id": "media_width",
          "label": "Image width",
          "min": 5,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 10
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Heading"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p>Use this text to share information about your brand with your customers. Describe a product, share announcements, or welcome customers to your store.</p>"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Button text"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Button URL"
        },
        {
          "type": "header",
          "content": "Image Colors",
          "info": "Gradient replaces solid colors when set. Background is ignored when the image is used."
        },
        {
          "type": "color",
          "id": "image_background",
          "label": "Background",
          "default": "#000000"
        },
        {
          "type": "color_background",
          "id": "image_background_gradient",
          "label": "Background gradient"
        },
        {
          "type": "color",
          "id": "image_text_color",
          "label": "Text",
          "default": "#ffffff"
        },
        {
          "type": "color_background",
          "id": "image_text_gradient",
          "label": "Text gradient"
        },
        {
          "type": "color",
          "id": "image_button_background",
          "label": "Button background"
        },
        {
          "type": "color",
          "id": "image_button_text_color",
          "label": "Button text"
        }
      ]
    },
    {
      "type": "play",
      "name": "Play button",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Play button is hidden when autoplay is enabled."
        }
      ]
    },
    {
      "type": "subheading",
      "name": "Subheading",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Subheading"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Heading"
        },
        {
          "type": "select",
          "id": "heading_tag",
          "label": "Style",
          "options": [
            {
              "value": "h0",
              "label": "H0"
            },
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ],
          "default": "h1"
        }
      ]
    },
    {
      "name": "Paragraph",
      "type": "richtext",
      "settings": [
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p>Use video to showcase product features or to create a unique atmosphere on your store.</p>"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "options": [
            {
              "value": "outline",
              "label": "Outline"
            },
            {
              "value": "fill",
              "label": "Fill"
            }
          ],
          "default": "outline"
        },
        {
          "type": "select",
          "id": "size",
          "label": "Size",
          "options": [
            {
              "value": "sm",
              "label": "Small"
            },
            {
              "value": "base",
              "label": "Medium"
            },
            {
              "value": "lg",
              "label": "Large"
            },
            {
              "value": "xl",
              "label": "X-Large"
            }
          ],
          "default": "lg"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Button text"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        },
        {
          "type": "color",
          "id": "button_background",
          "label": "Background"
        },
        {
          "type": "color",
          "id": "button_text_color",
          "label": "Text"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Combined Section"
    }
  ]
}
{% endschema %}
